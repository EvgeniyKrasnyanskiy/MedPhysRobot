# handlers/relay.py

from aiogram import Router, F
from aiogram.types import Message, InputMediaPhoto, InputMediaVideo
from aiogram import Bot
from utils.config import RELAY_GROUP_ID
from utils.db import (
    save_mapping, get_user_by_forwarded, is_banned, is_muted
)
from utils.logger import setup_logger
from typing import List

router = Router()
logger = setup_logger("relay")

@router.message(F.chat.type == "private")
async def handle_private_message(message: Message, bot: Bot, album: List[Message] = None):
    user_id = message.from_user.id

    if is_banned(user_id):
        await message.answer("üö´ –í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã.")
        return

    if is_muted(user_id):
        await message.answer("üîá –í—ã –≤—Ä–µ–º–µ–Ω–Ω–æ –∑–∞–º—å—é—á–µ–Ω—ã.")
        return

    try:
        if album:
            media = []
            for msg in album:
                if msg.photo:
                    media.append(InputMediaPhoto(media=msg.photo[-1].file_id, caption=msg.caption or ""))
                elif msg.video:
                    media.append(InputMediaVideo(media=msg.video.file_id, caption=msg.caption or ""))
            sent = await bot.send_media_group(chat_id=RELAY_GROUP_ID, media=media)
            save_mapping(sent[0].message_id, user_id, album[0].message_id)
            logger.info(f"[RELAY] –ü–µ—Ä–µ—Å–ª–∞–Ω –∞–ª—å–±–æ–º –∏–∑ {len(album)} —ç–ª–µ–º–µ–Ω—Ç–æ–≤")
        else:
            forwarded = await bot.copy_message(
                chat_id=RELAY_GROUP_ID,
                from_chat_id=message.chat.id,
                message_id=message.message_id
            )
            save_mapping(forwarded.message_id, user_id, message.message_id)
            logger.info(f"[RELAY] –ü–µ—Ä–µ—Å–ª–∞–Ω–æ –æ–¥–∏–Ω–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {user_id}")
        await message.answer("‚úÖ –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ!")
    except Exception as e:
        logger.error(f"[RELAY] –û—à–∏–±–∫–∞ –ø–µ—Ä–µ—Å—ã–ª–∫–∏: {e}")
        await message.answer("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ—Å–ª–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ.")

@router.message(F.chat.id == RELAY_GROUP_ID, F.reply_to_message)
async def handle_group_reply(message: Message, bot: Bot, album: List[Message] = None):
    forwarded_id = message.reply_to_message.message_id
    user_id = get_user_by_forwarded(forwarded_id)

    if not user_id:
        logger.warning(f"[RELAY] –ù–µ –Ω–∞–π–¥–µ–Ω user_id –¥–ª—è forwarded_id={forwarded_id}")
        return

    try:
        if album:
            media = []
            for msg in album:
                if msg.photo:
                    media.append(InputMediaPhoto(media=msg.photo[-1].file_id, caption=msg.caption or ""))
                elif msg.video:
                    media.append(InputMediaVideo(media=msg.video.file_id, caption=msg.caption or ""))
            await bot.send_media_group(chat_id=user_id, media=media)
            logger.info(f"[RELAY] –û—Ç–≤–µ—Ç-–∞–ª—å–±–æ–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
        else:
            await bot.copy_message(
                chat_id=user_id,
                from_chat_id=message.chat.id,
                message_id=message.message_id
            )
            logger.info(f"[RELAY] –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
    except Exception as e:
        logger.error(f"[RELAY] –û—à–∏–±–∫–∞ –ø–µ—Ä–µ—Å—ã–ª–∫–∏ –æ—Ç–≤–µ—Ç–∞: {e}")
